let fruits = ["Яблоко", "Апельсин", "Груша"];

//  pop() Удаляет последний элемент из массива и возвращает его:
// console.log(fruits.pop());//Груша
// console.log(fruits)

// at(-1)// просто возвращает его не удаляя
// console.log(fruits.at(-1));
// console.log(fruits)

//push Добавляет элемент в конец массива:
//fruits.push(...) равнозначен fruits[fruits.length] =
// fruits.push("apple");
// console.log(fruits)

//РАБОТАЮТ МЕДЛЕНЕЕ ЧЕМ POO/PUSH
//shift Удаляет из массива первый элемент и возвращает его:
// console.log(fruits.shift());//Яблоко
// console.log(fruits);//['Апельсин', 'Груша']

//unshift Добавляет элемент в начало массива:
//console.log(fruits.unshift("Pear"))
//console.log(fruits)//['Pear', 'Яблоко', 'Апельсин', 'Груша']

//Например, единственный элемент, имеющий большой индекс, даёт большую длину:

// let fr = [];
// fruits[123] = "Яблоко";

// console.log(fruits.length); // 124

// let arr = [1, 2, 3, 4, 5];

// arr.length = 2; // укорачиваем до двух элементов
// alert(arr); // [1, 2]

// arr.length = 5; // возвращаем length как было
// alert(arr[3]); // undefined: значения не восстановились

//Таким образом, самый простой способ очистить массив – это arr.length = 0;.

/********************************************************************************************************/
//toString
let q = [1, 2, 3, 4, 5]
// console.log(q)
// console.log(String(q))
// Массивы не имеют ни Symbol.toPrimitive, ни функционирующего valueOf, они реализуют только преобразование toString,
//  таким образом, здесь [] становится пустой строкой, [1] становится "1", а [1,2] становится "1,2".
// console.log([] + 1)
// console.log([1] + 1)
// console.log([1, 2] + 1)
// Когда бинарный оператор плюс "+" добавляет что-либо к строке, он тоже преобразует это в строку, таким образом:
console.log('' + 1)
console.log('1,2' + 1)
// console.log()
// console.log()